name: Build Plugin

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write  # This gives permission to create releases

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Setup pnpm
      uses: pnpm/action-setup@v3
      with:
        version: 9.4.0

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Build frontend
      run: pnpm run build

    - name: Prepare for plugin build
      run: |
        # Remove unnecessary files/folders before building
        rm -rf backend/
        rm -rf defaults/
        rm -rf py_modules/
        rm -f .gitignore
        rm -f .gitmodules
        rm -f tsconfig.json
        rm -f rollup.config.js
        rm -f decky.pyi
        rm -rf .github/
        rm -rf src/
        rm -f pnpm-lock.yaml

    - name: Download Decky CLI
      run: |
        mkdir -p $(pwd)/cli
        curl -L -o $(pwd)/cli/decky "https://github.com/SteamDeckHomebrew/cli/releases/download/0.0.7/decky-linux-x86_64"
        chmod +x $(pwd)/cli/decky

    - name: Build plugin
      run: |
        # Build the plugin - use sudo to avoid Docker permission issues
        sudo $(pwd)/cli/decky plugin build -b -o $(pwd)/out -s directory .

        # Fix ownership of files after Docker
        sudo chown -R $(whoami) $(pwd)/out

    - name: Upload plugin artifact
      uses: actions/upload-artifact@v4
      with:
        name: KodiLauncher
        path: out/*.zip

    - name: Create release
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.run_number }}
        name: Build ${{ github.run_number }}
        draft: false
        prerelease: false
        files: out/*.zip
        token: ${{ secrets.GITHUB_TOKEN }}
